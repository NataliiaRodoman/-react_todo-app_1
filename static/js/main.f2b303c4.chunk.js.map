{"version":3,"sources":["types/Constants.ts","utils/fetchClient.ts","Components/Header.tsx","Components/TodoItem.tsx","Components/TodoList.tsx","Components/Footer.tsx","Components/ErrorModal.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["ErrorMessage","FilterBy","request","url","delay","data","arguments","length","undefined","options","method","body","JSON","stringify","headers","Promise","resolve","setTimeout","then","fetch","response","ok","Error","json","client","Header","_ref","querySearch","setQuerySearch","handleAddTodo","selectAllTodos","isAllTodosCompleted","_jsxs","className","children","_jsx","type","classNames","active","onClick","onSubmit","event","preventDefault","placeholder","value","onChange","target","TodoItem","React","memo","props","todo","onDelete","onChangeStatus","loadingTodos","useContext","createContext","_useState","useState","_useState2","_slicedToArray","isEditing","setIsEditing","_useState3","title","_useState4","changedTitle","setChangedTitle","input","useRef","updateTodoTitle","trim","id","useEffect","current","focus","classnames","completed","ref","onBlur","onKeyUp","key","_Fragment","onDoubleClick","includes","TodoList","todos","tempTodo","map","Footer","todosShow","filterBy","setFilterBy","deleteTodoCompleted","todoLeft","filter","buttonClear","COMPLETED","concat","href","selected","ALL","ACTIVE","opacity","ErrorModal","onClose","error","onErrorChange","hideNotification","clearTimeout","USER_ID","App","setTodos","errorMessage","setErrorMessage","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","setTempTodo","filteredTodos","useMemo","getTodosServer","_asyncToGenerator","_regeneratorRuntime","mark","_callee","arrayTodos","wrap","_context","prev","next","sent","t0","DownloadError","stop","apply","addTodo","_ref2","_callee2","newTodo","_context2","userId","abrupt","_objectSpread","NotAdded","finish","handleDeleteTodo","_ref3","_callee3","todoId","filtTodos","_context3","NotDeleted","_x","_ref4","_callee4","_context4","forEach","onUpdate","_ref5","_callee5","updatedTodos","todoToUpdate","_context5","find","Issue","_x2","updateTodo","property","useCallback","_ref6","_callee6","_context6","NotUpdated","_x3","_x4","every","_callee7","_context7","all","container","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.f2b303c4.chunk.js","sourcesContent":["/* eslint-disable no-shadow */\nexport enum ErrorMessage {\n  NotAdded = 'Unable to add a todo',\n  NotDeleted = 'Unable to delete a todo',\n  NotUpdated = 'Unable to update a todo',\n  Issue = 'There is an issue.',\n  DownloadError = 'Failed to load todos',\n}\n\nexport enum FilterBy {\n  ALL = 'All',\n  ACTIVE = 'Active',\n  COMPLETED = 'Completed',\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  querySearch: string,\n  setQuerySearch: (query: string) => void,\n  handleAddTodo: () => void,\n  selectAllTodos: () => void,\n  isAllTodosCompleted: boolean,\n};\n\nexport const Header: React.FC<Props> = ({\n  querySearch,\n  setQuerySearch,\n  handleAddTodo,\n  selectAllTodos,\n  isAllTodosCompleted,\n}) => {\n  const handleSubmit = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    handleAddTodo();\n    setQuerySearch('');\n  };\n\n  return (\n    <header className=\"todoapp__header\">\n      <button\n        type=\"button\"\n        className={classNames(\n          'todoapp__toggle-all',\n          { active: isAllTodosCompleted },\n        )}\n        onClick={selectAllTodos}\n      />\n\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"todoapp__new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={querySearch}\n          onChange={(event) => setQuerySearch(event.target.value)}\n        />\n      </form>\n    </header>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, {\n  FC,\n  useState,\n  FormEvent,\n  ChangeEvent,\n  KeyboardEvent,\n  useRef,\n  useEffect,\n  useContext,\n} from 'react';\nimport classnames from 'classnames';\nimport { Todo } from '../types/Todo';\n\ninterface Props {\n  todo: Todo,\n  onDelete: (id: number) => void,\n  onChangeStatus: (id: number, property: Partial<Todo>) => void\n}\n\nexport const TodoItem: FC<Props> = React.memo((props) => {\n  const {\n    todo,\n    onDelete,\n    onChangeStatus,\n  } = props;\n\n  const loadingTodos = useContext(React.createContext([0]));\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [changedTitle, setChangedTitle] = useState(todo.title);\n  const input = useRef<HTMLInputElement | null>(null);\n\n  const updateTodoTitle = () => {\n    if (changedTitle === todo.title) {\n      setIsEditing(false);\n\n      return;\n    }\n\n    if (!changedTitle.trim()) {\n      onDelete(todo.id);\n    }\n\n    onChangeStatus(todo.id, { title: changedTitle });\n    setIsEditing(false);\n  };\n\n  const handleChangeTitle = (event: ChangeEvent<HTMLInputElement>) => {\n    setChangedTitle(event.target.value);\n  };\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    updateTodoTitle();\n  };\n\n  const cancelEditing = (event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Escape') {\n      setIsEditing(false);\n      setChangedTitle(todo.title);\n    }\n  };\n\n  useEffect(() => {\n    if (isEditing && input.current) {\n      input.current.focus();\n    }\n  }, [isEditing]);\n\n  return (\n    <div className={classnames('todo', { completed: todo.completed })}>\n      <label className=\"todo__status-label\">\n        <input\n          type=\"checkbox\"\n          className=\"todo__status\"\n          onChange={() => {\n            onChangeStatus(todo.id, { completed: !todo.completed });\n          }}\n        />\n      </label>\n\n      {isEditing ? (\n        <form onSubmit={handleSubmit}>\n          <input\n            ref={input}\n            type=\"text\"\n            className=\"todo__title-field\"\n            placeholder=\"Empty todo will be deleted\"\n            value={changedTitle}\n            onChange={handleChangeTitle}\n            onBlur={updateTodoTitle}\n            onKeyUp={cancelEditing}\n          />\n        </form>\n      ) : (\n        <>\n          <span\n            className=\"todo__title\"\n            onDoubleClick={() => setIsEditing(true)}\n          >\n            {todo.title}\n          </span>\n\n          <button\n            type=\"button\"\n            className=\"todo__remove\"\n            onClick={() => onDelete(todo.id)}\n          >\n            ×\n          </button>\n        </>\n      )}\n\n      <div className={classnames('modal overlay', {\n        'is-active': loadingTodos.includes(todo.id),\n      })}\n      >\n        <div className=\"modal-background has-background-white-ter\" />\n        <div className=\"loader\">\n          <div className=\"loader__content\" />\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React, { FC } from 'react';\nimport { Todo } from '../types/Todo';\nimport { TodoItem } from './TodoItem';\n\ninterface Props {\n  todos: Todo[],\n  tempTodo: Todo | null,\n  onDelete: (id: number) => void,\n  onChange: (id: number, property: Partial<Todo>) => void\n}\n\nexport const TodoList: FC<Props> = React.memo((props) => {\n  const {\n    todos,\n    tempTodo,\n    onDelete,\n    onChange,\n  } = props;\n\n  return (\n    <section className=\"todoapp__main\" data-cy=\"TodoList\">\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          onDelete={onDelete}\n          onChangeStatus={onChange}\n        />\n      ))}\n\n      {tempTodo && (\n        <TodoItem\n          todo={tempTodo}\n          key={0}\n          onDelete={onDelete}\n          onChangeStatus={onChange}\n        />\n      )}\n    </section>\n  );\n});\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../types/Todo';\nimport { FilterBy } from '../types/Constants';\n\ninterface Props {\n  todosShow: Todo[],\n  filterBy: FilterBy,\n  setFilterBy: (filterBy: FilterBy) => void,\n  deleteTodoCompleted: () => void;\n}\n\nexport const Footer: React.FC<Props> = ({\n  todosShow,\n  filterBy,\n  setFilterBy,\n  deleteTodoCompleted,\n}) => {\n  const todoLeft = todosShow.filter(todo => !todo.completed).length;\n  const buttonClear = todosShow.filter(todo => todo.completed).length;\n\n  return (\n    <footer className=\"todoapp__footer\">\n      <span className=\"todo-count\">\n        {filterBy !== FilterBy.COMPLETED\n          ? (`${todoLeft} items left`)\n          : (`${buttonClear} items left`)}\n      </span>\n\n      <nav className=\"filter\">\n        <a\n          href=\"#/\"\n          className={classNames(\n            'filter__link',\n            { selected: filterBy === FilterBy.ALL },\n          )}\n          onClick={() => setFilterBy(FilterBy.ALL)}\n        >\n          All\n        </a>\n\n        <a\n          href=\"#/active\"\n          className={classNames(\n            'filter__link',\n            { selected: filterBy === FilterBy.ACTIVE },\n          )}\n          onClick={() => setFilterBy(FilterBy.ACTIVE)}\n        >\n          Active\n        </a>\n\n        <a\n          href=\"#/completed\"\n          className={classNames(\n            'filter__link',\n            { selected: filterBy === FilterBy.COMPLETED },\n          )}\n          onClick={() => setFilterBy(FilterBy.COMPLETED)}\n        >\n          Completed\n        </a>\n      </nav>\n\n      <button\n        type=\"button\"\n        className={classNames(\n          'todoapp__clear-completed',\n          { opacity: buttonClear === 0 },\n        )}\n        onClick={deleteTodoCompleted}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useEffect } from 'react';\nimport { ErrorMessage } from '../types/Constants';\n\ninterface Props {\n  onClose: () => void;\n  error: string;\n  onErrorChange: (error: ErrorMessage | null) => void;\n}\n\nexport const ErrorModal: React.FC<Props> = ({ onClose, error, onErrorChange }) => {\n  useEffect(() => {\n    const hideNotification = setTimeout(() => {\n      onErrorChange(null);\n    }, 3000);\n\n    return () => clearTimeout(hideNotification);\n  }, [error]);\n\n  return (\n    <div className=\"notification is-danger is-light has-text-weight-normal\">\n      <button\n        type=\"button\"\n        className=\"delete\"\n        onClick={onClose}\n      />\n      {error}\n    </div>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, {\n  useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport { Todo } from './types/Todo';\nimport { FilterBy, ErrorMessage } from './types/Constants';\nimport { createTodo, deleteTodo, getTodos } from './api/todos';\nimport { RequestTodo } from './types/RequestTodo';\nimport { client } from './utils/fetchClient';\nimport { Header } from './Components/Header';\nimport { TodoList } from './Components/TodoList';\nimport { Footer } from './Components/Footer';\nimport { ErrorModal } from './Components/ErrorModal';\n\nconst USER_ID = 10552;\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [errorMessage, setErrorMessage] = useState<ErrorMessage | null>(null);\n  const [querySearch, setQuerySearch] = useState('');\n  const [filterBy, setFilterBy] = useState<FilterBy>(FilterBy.ALL);\n\n  const [tempTodo, setTempTodo] = useState<Todo | null>(null);\n  const filteredTodos = useMemo(() => {\n    return todos.filter(todo => {\n      switch (filterBy) {\n        case FilterBy.ACTIVE:\n          return !todo.completed;\n        case FilterBy.COMPLETED:\n          return todo.completed;\n        case FilterBy.ALL:\n        default:\n          return todo;\n      }\n    });\n  }, [filterBy, todos]);\n\n  const getTodosServer = async () => {\n    try {\n      const arrayTodos = await getTodos(USER_ID);\n\n      setTodos(arrayTodos);\n    } catch (error) {\n      setErrorMessage(ErrorMessage.DownloadError);\n    }\n  };\n\n  useEffect(() => {\n    getTodosServer();\n  }, []);\n\n  const addTodo = async () => {\n    const newTodo: RequestTodo = {\n      userId: USER_ID,\n      completed: false,\n      title: querySearch,\n    };\n\n    try {\n      if (!querySearch.trim()) {\n        return;\n      }\n\n      await createTodo(USER_ID, newTodo);\n\n      setTempTodo({\n        id: 0,\n        ...newTodo,\n      });\n\n      await getTodosServer();\n    } catch (error) {\n      setErrorMessage(ErrorMessage.NotAdded);\n    } finally {\n      setTempTodo(null);\n    }\n  };\n\n  const handleDeleteTodo = async (todoId: number) => {\n    try {\n      const filtTodos = todos.filter(todo => todo.id !== todoId);\n\n      setTodos(filtTodos);\n      await deleteTodo(todoId);\n      await getTodosServer();\n    } catch (error) {\n      setErrorMessage(ErrorMessage.NotDeleted);\n    }\n  };\n\n  const deleteTodoCompleted = async () => {\n    todos.filter(todo => todo.completed)\n      .forEach(todo => handleDeleteTodo(todo.id));\n  };\n\n  const onUpdate = async (id: number) => {\n    const updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }\n\n      return todo;\n    });\n\n    setTodos(updatedTodos);\n    try {\n      const todoToUpdate = todos.find((todo) => todo.id === id);\n\n      if (todoToUpdate) {\n        await client.patch(`/todos/${id}`, {\n          completed: !todoToUpdate.completed,\n          title: todoToUpdate.title,\n          userId: USER_ID,\n          id,\n        });\n      }\n    } catch (error) {\n      setErrorMessage(ErrorMessage.Issue);\n    }\n  };\n\n  const updateTodo = (\n    todoId: number,\n    property: Partial<Todo>,\n  ) => {\n    return client.patch(`/todos/${todoId}`, property);\n  };\n\n  const updateTodoTitle = useCallback(\n    async (\n      id: number,\n      property: Partial<Todo>,\n    ) => {\n      try {\n        if (property.title === '') {\n          return;\n        }\n\n        await updateTodo(id, property);\n        getTodosServer();\n      } catch (error) {\n        setErrorMessage(ErrorMessage.NotUpdated);\n      }\n    }, [],\n  );\n\n  const handleCloseError = () => {\n    setErrorMessage(null);\n  };\n\n  const isAllTodosCompleted = useMemo(() => (\n    todos.every(todo => todo.completed)\n  ), [todos]);\n\n  const selectAllTodos = useCallback(async () => {\n    try {\n      await Promise.all(todos.map(todo => (\n        onUpdate(todo.id))));\n\n      setTodos(todos.map(todo => (\n        { ...todo, completed: !isAllTodosCompleted }\n      )));\n    } catch (error) {\n      setErrorMessage(ErrorMessage.NotUpdated);\n    }\n  }, [todos]);\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      <div className=\"todoapp__content\">\n        <Header\n          querySearch={querySearch}\n          setQuerySearch={setQuerySearch}\n          handleAddTodo={addTodo}\n          selectAllTodos={selectAllTodos}\n          isAllTodosCompleted={isAllTodosCompleted}\n        />\n\n        <TodoList\n          todos={filteredTodos}\n          onDelete={handleDeleteTodo}\n          tempTodo={tempTodo}\n          onChange={updateTodoTitle}\n        />\n        {todos.length > 0 && (\n          <Footer\n            todosShow={filteredTodos}\n            filterBy={filterBy}\n            setFilterBy={setFilterBy}\n            deleteTodoCompleted={deleteTodoCompleted}\n          />\n        )}\n      </div>\n\n      {errorMessage && (\n        <ErrorModal\n          onClose={handleCloseError}\n          error={errorMessage}\n          onErrorChange={setErrorMessage}\n        />\n      )}\n    </div>\n  );\n};\n","import { RequestTodo } from '../types/RequestTodo';\nimport { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const createTodo = (userId: number, data: RequestTodo) => {\n  return client.post<Todo>(`/todos?/userId=${userId}`, data);\n};\n\nexport const deleteTodo = (userId: number) => {\n  return client.delete(`/todos/${userId}`);\n};\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/index.scss';\n\nimport { App } from './App';\n\nconst container = document.getElementById('root') as HTMLElement;\nconst root = createRoot(container);\n\nroot.render(<App />);\n"],"sourceRoot":""}